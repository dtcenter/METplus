# PyEmbedIngest wrapper example

[config]
# Options are times, processes
# times = run all items in the PROCESS_LIST for a single initialization
# time, then repeat until all times have been evaluated.
# processes = run each item in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST.
LOOP_ORDER = times

# time looping - options are INIT, VALID, RETRO, and REALTIME
LOOP_BY = VALID

# Format of VALID_BEG and VALID_END
VALID_TIME_FMT = %Y%m%d%H

# Start time for METplus run
VALID_BEG = 2013022712

# End time for METplus run
VALID_END = 2013022712

# Increment between METplus runs in seconds. Must be >= 60
VALID_INCREMENT = 21600

# list of forecast leads to process
LEAD_SEQ = 0

# List of applications to run
PROCESS_LIST = PyEmbedIngest


# 1st INGEST INSTANCE
# python script with optional arguments to run for 1st ingest instance
# this ingest instance runs 1 scripts to generate 1 field
PY_EMBED_INGEST_1_SCRIPT_1 = {SCRIPTS_DIR}/tmp_file.py

# type of python input to expect for 1st ingest instance
# valid options: NUMPY, XARRAY
PY_EMBED_INGEST_1_TYPE = NUMPY

# output grid for 1st ingest instance. Can be a grid definition or file path
PY_EMBED_INGEST_1_OUTPUT_GRID = G130


# 2nd INGEST INSTANCE
# python script with optional arguments to run for 2nd ingest instance
# this ingest instance runs 2 scripts to generate 2 fields
PY_EMBED_INGEST_2_SCRIPT_1 = {INPUT_BASE}/met_test/scripts/python/read_ascii_numpy.py {INPUT_BASE}/met_test/data/python/fcst.txt FCST
PY_EMBED_INGEST_2_OUTPUT_FIELD_NAME_1 = Forecast

PY_EMBED_INGEST_2_SCRIPT_2 = {INPUT_BASE}/met_test/scripts/python/read_ascii_numpy.py {INPUT_BASE}/met_test/data/python/obs.txt OBS
PY_EMBED_INGEST_2_OUTPUT_FIELD_NAME_2 = Observation

# type of python input to expect for 2nd ingest instance
# valid options: NUMPY, XARRAY
PY_EMBED_INGEST_2_TYPE = NUMPY

# output grid for 2nd ingest instance. Can be a grid definition or file path
PY_EMBED_INGEST_2_OUTPUT_GRID = G130

[dir]
# directory containing the scripts to use for this use case
# Used only to define PY_EMBED_INGEST_1_SCRIPT in this example
SCRIPTS_DIR = {PARM_BASE}/use_cases/met_tool_wrapper/PyEmbedIngest

# output directory for 1st ingest instance
# in this example, the full output path is set in PY_EMBED_INGEST_1_OUTPUT_TEMPLATE
PY_EMBED_INGEST_1_OUTPUT_DIR =

# output directory for 2nd ingest instance
# in this example, the full output path is set in PY_EMBED_INGEST_2_OUTPUT_TEMPLATE
PY_EMBED_INGEST_2_OUTPUT_DIR = 

[filename_templates]
# output template to use for 1st ingest instance
# can optionally use [dir] PY_EMBED_INGEST_1_OUTPUT_DIR with this value
PY_EMBED_INGEST_1_OUTPUT_TEMPLATE = {OUTPUT_BASE}/met_tool_wrapper/PyEmbedIngest/test.nc

# output template to use for 2nd ingest instance
# can optionally use [dir] PY_EMBED_INGEST_2_OUTPUT_DIR with this value
PY_EMBED_INGEST_2_OUTPUT_TEMPLATE = {OUTPUT_BASE}/met_tool_wrapper/PyEmbedIngest/regrid_data_plane.nc
