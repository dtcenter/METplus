[config]
# time looping - options are INIT, VALID, RETRO, and REALTIME
LOOP_BY = VALID

# Format of VALID_BEG and VALID_END
VALID_TIME_FMT = %Y%m%d%H%M

# Start time for METplus run
VALID_BEG=201801021300

# End time for METplus run
VALID_END=201801021300

# Increment between METplus runs in seconds. Must be >= 60
VALID_INCREMENT=43200

# List of forecast leads to process
LEAD_SEQ = 0

# Options are times, processes
# times = run all items in the PROCESS_LIST for a single initialization
# time, then repeat until all times have been evaluated.
# processes = run each item in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST.
LOOP_ORDER = times

# List of applications to run
PROCESS_LIST = PCPCombine

# verbosity of PCPCombine MET output
#LOG_PCP_COMBINE_VERBOSITY = 2

# run PCPCombine on observation data
OBS_PCP_COMBINE_RUN = True

# method to run PCPCombine. Options are ADD, SUM, SUBTRACT, and DERIVE
OBS_PCP_COMBINE_METHOD = ADD

# List of variables to compare
OBS_VAR1_NAME = APCP
OBS_VAR1_LEVELS = A06

# Name to identify observation data in output
OBTYPE = IMERG

# File format. Options are GRIB, NETCDF, or GEMPAK
OBS_PCP_COMBINE_INPUT_DATATYPE = PYTHON_NUMPY

OBS_PCP_COMBINE_INPUT_ACCUMS = 6
OBS_PCP_COMBINE_INPUT_NAMES = {PARM_BASE}/use_cases/met_tool_wrapper/PCPCombine/sum_IMERG_V06_HDF5.py {OBS_PCP_COMBINE_INPUT_DIR} IRprecipitation {valid?fmt=%Y%m%d%H} 02

[dir]
OBS_PCP_COMBINE_INPUT_DIR = {INPUT_BASE}/met_test/new/imerg
OBS_PCP_COMBINE_OUTPUT_DIR = {OUTPUT_BASE}/met_tool_wrapper/PCPCombine/PCPCombine_combine_py_embed

[filename_templates]
# format of filenames

OBS_PCP_COMBINE_INPUT_TEMPLATE = PYTHON_NUMPY
OBS_PCP_COMBINE_OUTPUT_TEMPLATE = IMERG.{valid?fmt=%Y%m%d_%H%M}_A{level?fmt=%2H}h

[user_env_vars]
# uncomment and change this to the path of a version of python that has the h5py package installed
#MET_PYTHON_EXE = /path/to/python/with/h5-py/and/numpy/packages/bin/python