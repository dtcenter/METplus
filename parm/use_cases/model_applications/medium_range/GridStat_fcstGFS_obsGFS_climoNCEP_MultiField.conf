# Grid to Grid Anomoly Example

[config]
# List of applications to run
PROCESS_LIST = GridStat, StatAnalysis

# time looping - options are INIT, VALID, RETRO, and REALTIME
LOOP_BY = VALID

# Format of VALID_BEG and VALID_END
VALID_TIME_FMT = %Y%m%d%H

# Start time for METplus run
VALID_BEG = 2017061300

# End time for METplus run
VALID_END = 2017061306

# Increment between METplus runs in seconds. Must be >= 60
VALID_INCREMENT = 21600

# list of forecast leads to process
LEAD_SEQ = 24, 48

# Options are times, processes
# times = run all items in the PROCESS_LIST for a single initialization
# time, then repeat until all times have been evaluated.
# processes = run each item in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST.
LOOP_ORDER = times

# list of variables to compare
BOTH_VAR1_NAME = TMP
BOTH_VAR1_LEVELS = P850, P500, P250

BOTH_VAR2_NAME = UGRD
BOTH_VAR2_LEVELS = P850, P500, P250

BOTH_VAR3_NAME = VGRD
BOTH_VAR3_LEVELS = P850, P500, P250

BOTH_VAR4_NAME = PRMSL
BOTH_VAR4_LEVELS = Z0

# description of data to be processed
# used in output file path
MODEL = GFS
OBTYPE = ANLYS

# location of grid_stat MET config file
GRID_STAT_CONFIG_FILE = {CONFIG_DIR}/GridStatConfig_anom

GRID_STAT_OUTPUT_PREFIX = {MODEL}_vs_{OBTYPE}

GRID_STAT_REGRID_TO_GRID = G002
GRID_STAT_REGRID_METHOD = BILIN
GRID_STAT_REGRID_WIDTH = 2

# variables to describe format of forecast data
FCST_IS_PROB = false

# variables to describe format of observation data
#  none needed

# StatAnalysis configuration
MODEL1 = GFS
MODEL1_OBTYPE = ANLYS

# configuration file to use with StatAnalysis
STAT_ANALYSIS_CONFIG_FILE = {PARM_BASE}/met_config/STATAnalysisConfig_wrapped

# stat_analysis job info
STAT_ANALYSIS_JOB_NAME = filter

# if using -dump_row, put in JOBS_ARGS "-dump_row [dump_row_file]"
# if using -out_stat, put in JOBS_ARGS "-out_stat [out_stat_file]"
# METplus will fill in filename
STAT_ANALYSIS_JOB_ARGS = -dump_row [dump_row_file]

# Optional variables for further filtering
# can be blank, single, or multiple values
# if more than one use comma separated list
#
# (FCST)(OBS)_(VALID)(INIT)_HOUR_LIST: HH format (ex. 00, 06, 12)
# (FCST)(OBS)_LEAD_LIST: HH[H][MMSS] format (ex. 00, 06, 120)
MODEL_LIST = {MODEL1}
DESC_LIST =
FCST_LEAD_LIST =
OBS_LEAD_LIST =
FCST_VALID_HOUR_LIST = 00, 06
FCST_INIT_HOUR_LIST = 00, 06
OBS_VALID_HOUR_LIST =
OBS_INIT_HOUR_LIST =
FCST_VAR_LIST =
OBS_VAR_LIST =
FCST_UNITS_LIST =
OBS_UNITS_LIST =
FCST_LEVEL_LIST =
OBS_LEVEL_LIST =
VX_MASK_LIST =
INTERP_MTHD_LIST =
INTERP_PNTS_LIST =
FCST_THRESH_LIST =
OBS_THRESH_LIST =
COV_THRESH_LIST =
ALPHA_LIST =
LINE_TYPE_LIST =
# how to treat items listed in above _LIST variables
# GROUP_LIST_ITEMS: items listed in a given _LIST variable
#                   will be grouped together
# LOOP_LIST_ITEMS:  items listed in a give _LIST variable
#                   will be looped over
# if not listed METplus will treat the list as a group
GROUP_LIST_ITEMS = FCST_INIT_HOUR_LIST
LOOP_LIST_ITEMS = FCST_VALID_HOUR_LIST, MODEL_LIST


[dir]
# location of configuration files used by MET applications
CONFIG_DIR={PARM_BASE}/use_cases/model_applications/medium_range/GridStat_fcstGFS_obsGFS_climoNCEP_MultiField

# directory containing climatology data
GRID_STAT_CLIMO_MEAN_INPUT_DIR = {INPUT_BASE}/model_applications/medium_range/grid_to_grid/nwprod/fix

# input and output data directories
FCST_GRID_STAT_INPUT_DIR = {INPUT_BASE}/model_applications/medium_range/grid_to_grid/gfs/fcst
OBS_GRID_STAT_INPUT_DIR = {INPUT_BASE}/model_applications/medium_range/grid_to_grid/gfs/obs
GRID_STAT_OUTPUT_DIR = {OUTPUT_BASE}/met_out/{MODEL}/anom

# directory to look for input for StatAnalysis
MODEL1_STAT_ANALYSIS_LOOKIN_DIR = {OUTPUT_BASE}/met_out/{MODEL1}/anom/*/grid_stat

# Output data directory
STAT_ANALYSIS_OUTPUT_DIR = {OUTPUT_BASE}/gather_by_date/stat_analysis/grid2grid/anom

[filename_templates]
# format of filenames

# Climatology mean
GRID_STAT_CLIMO_MEAN_INPUT_TEMPLATE = cmean_1d.1959{valid?fmt=%m%d}

# GFS
FCST_GRID_STAT_INPUT_TEMPLATE = pgbf{lead?fmt=%.3H}.gfs.{init?fmt=%Y%m%d%H}

# ANLYS
OBS_GRID_STAT_INPUT_TEMPLATE = pgbanl.gfs.{valid?fmt=%Y%m%d%H}

GRID_STAT_OUTPUT_TEMPLATE = {valid?fmt=%Y%m%d%H%M}/grid_stat

# Optional settings to create templated directory and file name information
# to save files as stat_analysis output as, this is appended to STAT_ANALYSIS_OUTPUT_DIR
# if no template is provided a default filename set in the code will be used
# Use:
# string templates can be set for all the lists being looped over, just
# use and a lower case version of the list, ex. {fcst_valid_hour?fmt=%H}
# or {fcst_var?fmt=%s}
# For looping over models:
# can set MODELn_STAT_ANALYSIS_[DUMP_ROW/OUT_STAT]_TEMPLATE for individual models
# or STAT_ANALYSIS_[DUMP_ROW/OUT_STAT] with {model?fmt=%s}
MODEL1_STAT_ANALYSIS_DUMP_ROW_TEMPLATE = {fcst_valid_hour?fmt=%H}Z/{MODEL1}/{MODEL1}_{valid?fmt=%Y%m%d}.stat
