[config]

# JLV Notes:
# To test this use case:
# Subset the grib files as done before for the SkewT use case:
#    see: seneca:/d1/projects/TCDiag/add_data_for_feature_2359_useCase_tcdiag_single_init.bash
# Add the data to Seneca: /d1/projects/TCDiag/model_applications/tc_and_extra_tc/TCDiag_fcstGFSO_SHIP_obsOFCL_SingleForecast
# Uncomment the parts of the use case one by one and get the plumbing working


# Documentation for this use case can be found at
# https://metplus.readthedocs.io/en/latest/generated/model_applications/tc_and_extra_tc/TCDiag_fcstGFSO_SHIP_obsOFCL_SingleForecast.html

# For additional information, please see the METplus Users Guide.
# https://metplus.readthedocs.io/en/latest/Users_Guide

###
# Processes to run
# https://metplus.readthedocs.io/en/latest/Users_Guide/systemconfiguration.html#process-list
###

PROCESS_LIST = TCPairs
#TCDiag, TCPairs , UserScript(reformatter), UserScript(time_series_plotter), UserScript(skew_t_plotter)

###
# Time Info
# LOOP_BY options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set
# LEAD_SEQ is the list of forecast leads to process
# https://metplus.readthedocs.io/en/latest/Users_Guide/systemconfiguration.html#timing-control
###

LOOP_BY = INIT
INIT_TIME_FMT = %Y%m%d_%H%M%S
INIT_BEG = 20220926_120000
INIT_END = 20220926_120000
INIT_INCREMENT = 6H

LEAD_SEQ = begin_end_incr(0,126,6)

USER_SCRIPT_RUNTIME_FREQ = RUN_ONCE

###
# UserScript Settings
# https://metplus.readthedocs.io/en/latest/Users_Guide/wrappers.html#userscript
###


[user_env_vars]
REFORMAT_YAML_CONFIG_NAME = {PARM_BASE}/use_cases/model_applications/tc_and_extra_tc/UserScript_TCDIAG_fcstGFSO_SHIP_obsOFCL_SingleForecast/reformat_tcdiag.yaml
REFORMAT_INPUT_BASE = {TC_PAIRS_OUTPUT_DIR}
REFORMAT_OUTPUT_BASE = {OUTPUT_BASE}/reformatted/

TIME_SERIES_PLOT_INPUT_BASE = {REFORMAT_OUTPUT_BASE}
TIME_SERIES_PLOT_OUTPUT_BASE = {OUTPUT_BASE}/plots
TIME_SERIES_PLOT_YAML_CONFIG_NAME = {PARM_BASE}/use_cases/model_applications/tc_and_extra_tc/UserScript_TCDIAG_fcstGFSO_SHIP_obsOFCL_SingleForecast/plot_time_series.yaml


SKEW_T_PLOT_YAML_CONFIG_NAME = {PARM_BASE}/use_cases/model_applications/tc_and_extra_tc/UserScript_TCDIAG_fcstGFSO_SHIP_obsOFCL_SingleForecast/plot_skew_t.yaml
SKEW_T_PLOT_INPUT_BASE = {METPLUS_BASE}/parm/use_cases/model_applications/tc_and_extra_tc/UserScript_TCDIAG_fcstGFSO_SHIP_obsOFCL_SingleForecast/Data/skew_t
SKEW_T_PLOT_OUTPUT_BASE = {OUTPUT_BASE}/plots


METDATAIO_BASE = {METPLUS_BASE}/../METdataio
METCALCPY_BASE = {METPLUS_BASE}/../METcalcpy
METPLOTPY_BASE = {METPLUS_BASE}/../METplotpy
PYTHONPATH = {METDATAIO_BASE}:{METDATAIO_BASE}/METdbLoad:{METDATAIO_BASE}/METdbLoad/ush:{METDATAIO_BASE}/METreformat:{METCALCPY_BASE}:{METCALCPY_BASE}/metcalcpy:{METPLOTPY_BASE}:{METPLOTPY_BASE}/metplotpy/plots


[reformatter]
USER_SCRIPT_COMMAND = {PARM_BASE}/use_cases/model_applications/tc_and_extra_tc/UserScript_TCDIAG_fcstGFSO_SHIP_obsOFCL_SingleForecast/reformat_tcdiag.py


[time_series_plotter]
USER_SCRIPT_COMMAND = {PARM_BASE}/use_cases/model_applications/tc_and_extra_tc/UserScript_TCDIAG_fcstGFSO_SHIP_obsOFCL_SingleForecast/plot_time_series.py


[skew_t_plotter]
USER_SCRIPT_COMMAND = {PARM_BASE}/use_cases/model_applications/tc_and_extra_tc/UserScript_TCDIAG_fcstGFSO_SHIP_obsOFCL_SingleForecast/plot_skew_t.py


[config]

###
# File I/O
# https://metplus.readthedocs.io/en/latest/Users_Guide/systemconfiguration.html#directory-and-filename-template-info
###

TC_DIAG_DECK_INPUT_DIR = {INPUT_BASE}/model_applications/tc_and_extra_tc/TCDiag_fcstGFSO_SHIP_obsOFCL_SingleForecast/tc_data/adeck/
TC_DIAG_DECK_INPUT_TEMPLATE = subset.a{TC_DIAG_BASIN_LOWER}{TC_DIAG_CYCLONE}{date?fmt=%Y}.dat

TC_DIAG_INPUT1_DIR = {INPUT_BASE}/model_applications/tc_and_extra_tc/TCDiag_fcstGFSO_SHIP_obsOFCL_SingleForecast/model_data/grib2/gfs/
#TC_DIAG_INPUT1_TEMPLATE = model_data/grib2/gfs/subset.gfs.0p25.t12z.pgrb2.0p25.f*
# The following 'fbegin_end_incr' shows how to read in only a subset of files (e.g., every 6 hours) if data are present
#    at a higher output frequency:
#      1st argument: beginning value
#      2nd argument: ending value
#      3rd arguemnt: increment
#      4th argument: number of digits to include left of the decimal point
TC_DIAG_INPUT1_TEMPLATE = subset.gfs.0p25.{init?fmt=%Y%m%d%H}.fbegin_end_incr(0,126,6,3).grib2

TC_DIAG_INPUT1_DOMAIN = parent
TC_DIAG_INPUT1_TECH_ID_LIST = GFSO

TC_DIAG_OUTPUT_DIR = {OUTPUT_BASE}/tc_diag
TC_DIAG_OUTPUT_TEMPLATE = {date?fmt=%Y}


###
# Field Info
# https://metplus.readthedocs.io/en/latest/Users_Guide/systemconfiguration.html#field-info
###

# Variables at the surface
BOTH_VAR1_NAME = PRMSL
BOTH_VAR1_LEVELS = Z0

BOTH_VAR2_NAME = TMP
BOTH_VAR2_LEVELS = Z0

# Variables at 2 m
BOTH_VAR3_NAME = TMP
BOTH_VAR3_LEVELS = Z2

BOTH_VAR4_NAME = RH
BOTH_VAR4_LEVELS = Z2

# Variables at 10 m
BOTH_VAR5_NAME = UGRD
BOTH_VAR5_LEVELS = Z10

BOTH_VAR6_NAME = VGRD
BOTH_VAR6_LEVELS = Z10


# Variables for the entire column (L0)
BOTH_VAR7_NAME = PWAT
BOTH_VAR7_LEVELS = L0


PRESSURE_LEVELS = P1000, P925, P850, P700, P500, P400, P300, P250, P200, P150, P100

BOTH_VAR8_NAME = TMP
BOTH_VAR8_LEVELS = P1000, P925, P850, P700, P500, P400, P300, P250, P200, P150, P100

BOTH_VAR9_NAME = UGRD
BOTH_VAR9_LEVELS = P1000, P925, P850, P700, P500, P400, P300, P250, P200, P150, P100

BOTH_VAR10_NAME = VGRD
BOTH_VAR10_LEVELS = P1000, P925, P850, P700, P500, P400, P300, P250, P200, P150, P100

BOTH_VAR12_NAME = RH
BOTH_VAR12_LEVELS = P1000, P925, P850, P700, P500, P400, P300, P250, P200, P150, P100

BOTH_VAR13_NAME = HGT
BOTH_VAR13_LEVELS = P1000, P925, P850, P700, P500, P400, P300, P250, P200, P150, P100


###
# TCDiag Settings
# https://metplus.readthedocs.io/en/latest/Users_Guide/wrappers.html#tcdiag
###

LOG_TC_DIAG_VERBOSITY = 5

MODEL = GFSO

TC_DIAG_STORM_ID = AL092022
TC_DIAG_BASIN = AL
TC_DIAG_BASIN_LOWER = al
TC_DIAG_CYCLONE = 09

TC_DIAG_INIT_INCLUDE = {init?fmt=%Y%m%d%H}
#TC_DIAG_VALID_BEG =
#TC_DIAG_VALID_END =
#TC_DIAG_VALID_INCLUDE_LIST =
#TC_DIAG_VALID_EXCLUDE_LIST =
#TC_DIAG_VALID_HOUR_LIST =
#TC_DIAG_LEAD =

#TC_DIAG_DIAG_SCRIPT =

TC_DIAG_DOMAIN_INFO1_DOMAIN = parent
TC_DIAG_DOMAIN_INFO1_N_RANGE = 150
TC_DIAG_DOMAIN_INFO1_N_AZIMUTH = 8
TC_DIAG_DOMAIN_INFO1_DELTA_RANGE_KM = 10.0
TC_DIAG_DOMAIN_INFO1_DIAG_SCRIPT = MET_BASE/python/tc_diag/compute_tc_diag.py MET_BASE/python/tc_diag/config/post_resample.yml MET_BASE/tc_data/v2023-04-07_gdland_table.dat
TC_DIAG_DOMAIN_INFO1_OVERRIDE_DIAGS =

#TC_DIAG_DATA_DOMAIN =
#TC_DIAG_DATA_LEVEL =

#TC_DIAG_REGRID_METHOD = NEAREST
#TC_DIAG_REGRID_WIDTH = 1
#TC_DIAG_REGRID_VLD_THRESH = 0.5
#TC_DIAG_REGRID_SHAPE = SQUARE
#TC_DIAG_REGRID_CENSOR_THRESH =
#TC_DIAG_REGRID_CENSOR_VAL =
#TC_DIAG_REGRID_CONVERT =

#TC_DIAG_COMPUTE_TANGENTIAL_AND_RADIAL_WINDS =
#TC_DIAG_U_WIND_FIELD_NAME =
#TC_DIAG_V_WIND_FIELD_NAME =
#TC_DIAG_TANGENTIAL_VELOCITY_FIELD_NAME =
#TC_DIAG_TANGENTIAL_VELOCITY_LONG_FIELD_NAME =
#TC_DIAG_RADIAL_VELOCITY_FIELD_NAME =
#TC_DIAG_RADIAL_VELOCITY_LONG_FIELD_NAME =
#TC_DIAG_VORTEX_REMOVAL =
#TC_DIAG_ONE_TIME_PER_FILE_FLAG =
#TC_DIAG_NC_CYL_GRID_FLAG =
#TC_DIAG_NC_DIAG_FLAG =
#TC_DIAG_CIRA_DIAG_FLAG =
#TC_DIAG_OUTPUT_BASE_FORMAT =

#TC_DIAG_TIME_OFFSET_WARNING =





TC_PAIRS_RUNTIME_FREQ = RUN_ONCE_FOR_EACH

TC_PAIRS_ADECK_INPUT_DIR = {INPUT_BASE}/model_applications/tc_and_extra_tc/TCDiag_fcstGFSO_SHIP_obsOFCL_SingleForecast/tc_data/adeck/
TC_PAIRS_ADECK_TEMPLATE = subset.a{TC_DIAG_BASIN_LOWER}{TC_DIAG_CYCLONE}{date?fmt=%Y}.dat

TC_PAIRS_BDECK_INPUT_DIR = {INPUT_BASE}/model_applications/tc_and_extra_tc/TCDiag_fcstGFSO_SHIP_obsOFCL_SingleForecast/tc_data/bdeck/
TC_PAIRS_BDECK_TEMPLATE = b{TC_DIAG_BASIN_LOWER}{TC_DIAG_CYCLONE}{date?fmt=%Y}.dat

TC_PAIRS_EDECK_INPUT_DIR =
TC_PAIRS_EDECK_TEMPLATE =

TC_PAIRS_DIAG_DIR1 = {OUTPUT_BASE}/tc_diag/{date?fmt=%Y}/
TC_PAIRS_DIAG_TEMPLATE1 = s{TC_DIAG_BASIN_LOWER}{TC_DIAG_CYCLONE}{date?fmt=%Y}_gfso_doper_{date?fmt=%Y%m%d%H}_diag.dat
TC_PAIRS_DIAG_SOURCE1 = TCDIAG

TC_PAIRS_OUTPUT_DIR = {OUTPUT_BASE}/tc_pairs/{date?fmt=%Y}/
TC_PAIRS_OUTPUT_TEMPLATE = tc_pairs_{TC_DIAG_BASIN_LOWER}{date?fmt=%Y%m%d%H}.dat

TC_PAIRS_SKIP_IF_OUTPUT_EXISTS = no
TC_PAIRS_READ_ALL_FILES = no
TC_PAIRS_REFORMAT_DECK = no


###
# TCPairs Settings
# https://metplus.readthedocs.io/en/latest/Users_Guide/wrappers.html#tcpairs
###

TC_PAIRS_INIT_INCLUDE = 20220926_120000
TC_PAIRS_INIT_EXCLUDE =

TC_PAIRS_INIT_BEG = 20220926_120000
TC_PAIRS_INIT_END = 20220926_120000

#TC_PAIRS_VALID_INCLUDE =
#TC_PAIRS_VALID_EXCLUDE =

#TC_PAIRS_WRITE_VALID =

TC_PAIRS_VALID_BEG =
TC_PAIRS_VALID_END =

MODEL = GFSO

#TC_PAIRS_DESC =

#TC_PAIRS_STORM_ID = al062018, al092018, al132018, al142018
TC_PAIRS_BASIN = AL
TC_PAIRS_CYCLONE = 09
TC_PAIRS_STORM_NAME =

TC_PAIRS_DLAND_FILE = MET_BASE/tc_data/dland_global_tenth_degree.nc

#TC_PAIRS_CONSENSUS1_NAME =
#TC_PAIRS_CONSENSUS1_MEMBERS =
#TC_PAIRS_CONSENSUS1_REQUIRED =
#TC_PAIRS_CONSENSUS1_MIN_REQ =
#TC_PAIRS_CONSENSUS1_DIAG_REQUIRED =
#TC_PAIRS_CONSENSUS1_DIAG_MIN_REQ =
#TC_PAIRS_CONSENSUS1_WRITE_MEMBERS =

#TC_PAIRS_CHECK_DUP =

#TC_PAIRS_INTERP12 =

#TC_PAIRS_MATCH_POINTS =

TC_PAIRS_DIAG_INFO_MAP1_DIAG_SOURCE = CIRA_DIAG_RT
TC_PAIRS_DIAG_INFO_MAP1_TRACK_SOURCE = GFS
TC_PAIRS_DIAG_INFO_MAP1_FIELD_SOURCE = GFS_0p25
TC_PAIRS_DIAG_INFO_MAP1_MATCH_TO_TRACK =
TC_PAIRS_DIAG_INFO_MAP1_DIAG_NAME = SHR_MAG

#TC_PAIRS_DIAG_CONVERT_MAP1_DIAG_SOURCE = SHIPS_DIAG_RT
TC_PAIRS_DIAG_CONVERT_MAP1_DIAG_SOURCE = CIRA_DIAG_RT
TC_PAIRS_DIAG_CONVERT_MAP1_KEY =
TC_PAIRS_DIAG_CONVERT_MAP1_CONVERT =