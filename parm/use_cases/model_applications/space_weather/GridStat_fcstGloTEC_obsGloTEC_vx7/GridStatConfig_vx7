////////////////////////////////////////////////////////////////////////////////
//
// Grid-Stat configuration file for the glotec_vs_glotec METplus use case
//
// // This use case is based on the SWPC CWDP case (id: vx7) which compares GloTEC w/o COSMIC-1 RO data (e.g., the 'model') 
// // to a GloTEC run with COSMIC-1 RO data (e.g., the 'obs') - uses QF == for stratification.
//
// For additional information, see the MET_BASE/config/README file.
//
////////////////////////////////////////////////////////////////////////////////

//
// Output model name to be written
//
${METPLUS_MODEL}

//
// Output description to be written
// May be set separately in each "obs.field" entry
//
${METPLUS_DESC}

//
// Output observation type to be written
//
${METPLUS_OBTYPE}


////////////////////////////////////////////////////////////////////////////////

//
// Verification grid
// May be set separately in each "field" entry
//
${METPLUS_REGRID_DICT}

////////////////////////////////////////////////////////////////////////////////

//
// May be set separately in each "field" entry
//
censor_thresh    = [];
censor_val       = [];
cat_thresh       = [];
cnt_thresh       = [ NA ];
cnt_logic        = UNION;
wind_thresh      = [ NA ];
wind_logic       = UNION;
eclv_points      = 0.05;
nc_pairs_var_suffix = "";
nc_pairs_var_name = "";
rank_corr_flag   = FALSE;

// Applies to WAM and GloTEC
// NOTE: This was added because MET v8.0 could not recognize the updated data files with quality flags 
// (the files were missing expected file attributes for CF compliance). So we tell it that this is a 
// CF-compliant NetCDF file (even though it is not).
file_type  = NETCDF_NCCF;

//
// Forecast and observation fields to be verified
//
fcst = {
   field = [ ${FCST_FIELD} ];
}
obs = {
   field = [ ${OBS_FIELD} ];
}


////////////////////////////////////////////////////////////////////////////////
//
//
// Climatology mean data
//
// This section not used in this example.
//
//climo_mean = {
//
//   file_name = [ ${CLIMO_MEAN_FILE} ];
//   field     = [];
//
//   regrid = {
//      method     = NEAREST;
//      width      = 1;
//      vld_thresh = 0.5;
//      shape	 = SQUARE;
//   }
//
//   time_interp_method = DW_MEAN;
//   match_month        = TRUE;
//   match_day          = FALSE;
//   time_step          = 21600;
//}

//climo_stdev = climo_mean;
//climo_stdev = {
//   file_name = [];
//}
//
//climo_cdf_bins = 1;



////////////////////////////////////////////////////////////////////////////////

//
// Verification masking regions
//
// May be set separately in each "obs.field" entry
//
// The following mask uses the quality flag variable set in the GloTEC model file (the run WITHOUT RO data)
// Data coverage quality flag. 0=none; 1=poor; 2=fair; 3=good; 4=very good; 5=excellent 
//
// Note that it is necessary to add 'file_type=NETCDF_NCCF;' below to tell MET that this
// is a NetCDF file (it does not know from the larger context that this is the case). Otherwise
// MET may interpret this as a polyline mask.

mask = {
   grid = [ "FULL" ];
   poly = [ "${MODEL_FILE} {name = \"quality_flag\"; level = \"${MODEL_LEVEL}\"; file_type=NETCDF_NCCF;} ==0",
            "${MODEL_FILE} {name = \"quality_flag\"; level = \"${MODEL_LEVEL}\"; file_type=NETCDF_NCCF;} ==1",
            "${MODEL_FILE} {name = \"quality_flag\"; level = \"${MODEL_LEVEL}\"; file_type=NETCDF_NCCF;} ==2",
            "${MODEL_FILE} {name = \"quality_flag\"; level = \"${MODEL_LEVEL}\"; file_type=NETCDF_NCCF;} ==3",
	    "${MODEL_FILE} {name = \"quality_flag\"; level = \"${MODEL_LEVEL}\"; file_type=NETCDF_NCCF;} ==4",
	    "${MODEL_FILE} {name = \"quality_flag\"; level = \"${MODEL_LEVEL}\"; file_type=NETCDF_NCCF;} ==5", 
	    "${MASK_DIR}/EQUATORIAL.nc",
	    "${MASK_DIR}/MIDLATITUDE.nc",
	    "${MASK_DIR}/POLAR.nc" ];
}

////////////////////////////////////////////////////////////////////////////////

//
// Confidence interval settings
//
// This section not used in this example.
//
//ci_alpha  = [ 0.05 ];
//
//boot = {
//   interval = PCTILE;
//   rep_prop = 1.0;
//   n_rep    = 0;
//   rng      = "mt19937";
//   seed     = "";
//}

////////////////////////////////////////////////////////////////////////////////

//
// Data smoothing methods
//
// This section not used in this example.
//
//interp = {
//   field      = BOTH;
//   vld_thresh = 1.0;
//   shape      = SQUARE;
//
//  type = [
//      {
//         method = NEAREST;
//         width  = 1;
//     }
//   ];
//}



////////////////////////////////////////////////////////////////////////////////

//
// Neighborhood methods
// May be set separately in each "obs.field" entry
//
// UPDATE values in METplus config file to match:
nbrhd = {
   field      = BOTH;
   shape      = ${NEIGHBORHOOD_SHAPE};
   width      = [ ${NEIGHBORHOOD_WIDTH} ];
   cov_thresh = [ >=0.5 ];
   vld_thresh = 1.0;
}



////////////////////////////////////////////////////////////////////////////////

//
// Fourier decomposition
// May be set separately in each "obs.field" entry
//
fourier = {
   wave_1d_beg = [];
   wave_1d_end = [];
}

////////////////////////////////////////////////////////////////////////////////

//
// Statistical output types
// May be set separately in each "obs.field" entry
//
output_flag = {
   fho    = NONE;
   ctc    = STAT;
   cts    = STAT;
   mctc   = STAT;
   mcts   = STAT;
   cnt    = STAT;
   sl1l2  = STAT;
   sal1l2 = NONE;
   vl1l2  = NONE;
   val1l2 = NONE;
   vcnt   = NONE;
   pct    = NONE;
   pstd   = NONE;
   pjc    = NONE;
   prc    = NONE;
   eclv   = NONE;
   nbrctc = NONE;
   nbrcts = NONE;
   nbrcnt = NONE;
   grad   = NONE;
}

//
// NetCDF matched pairs output file
// May be set separately in each "obs.field" entry
//
nc_pairs_flag = {
   latlon     = TRUE;
   raw        = TRUE;
   diff       = TRUE;
   climo      = FALSE;
   weight     = FALSE;
   nbrhd      = FALSE;
   fourier    = FALSE;
   gradient   = FALSE;
   apply_mask = FALSE;
}

////////////////////////////////////////////////////////////////////////////////

grid_weight_flag = NONE;
tmp_dir          = "/tmp";
output_prefix    = "${OUTPUT_PREFIX}";
//version          = "V8.1";
////////////////////////////////////////////////////////////////////////////////
