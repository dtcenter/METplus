# UserScript wrapper for Weather Regime Analysis

[config]
# All steps, including pre-processing:
# PROCESS_LIST = RegridDataPlane(regrid_obs), PcpCombine(daily_mean_obs), UserScript(obs_wr_filelist), UserScript(script_wr)
# Weather Regime Analysis only:
PROCESS_LIST = UserScript(script_wr)

# time looping - options are INIT, VALID, RETRO, and REALTIME
# If set to INIT or RETRO:
#   INIT_TIME_FMT, INIT_BEG, INIT_END, and INIT_INCREMENT must also be set
# If set to VALID or REALTIME:
#   VALID_TIME_FMT, VALID_BEG, VALID_END, and VALID_INCREMENT must also be set
LOOP_BY = VALID

# Format of VALID_BEG and VALID_END using % items
# %Y = 4 digit year, %m = 2 digit month, %d = 2 digit day, etc.
# see www.strftime.org for more information
# %Y%m%d%H expands to YYYYMMDDHH
VALID_TIME_FMT = %Y%m%d%H

# Start time for METplus run - must match VALID_TIME_FMT
VALID_BEG = 1979120100

# End time for METplus run - must match VALID_TIME_FMT
VALID_END = 2017022800

# Increment between METplus runs (in seconds if no units are specified)
#  Must be >= 60 seconds
VALID_INCREMENT = 86400

# List of forecast leads to process for each run time (init or valid)
# In hours if units are not specified
# If unset, defaults to 0 (don't loop through forecast leads)
LEAD_SEQ = 0

# Only Process DJF
SKIP_TIMES = "%m:begin_end_incr(3,11,1)", "%m%d:0229"

# Order of loops to process data - Options are times, processes
# Not relevant if only one item is in the PROCESS_LIST
# times = run all wrappers in the PROCESS_LIST for a single run time, then
#   increment the run time and run all wrappers again until all times have
#   been evaluated.
# processes = run the first wrapper in the PROCESS_LIST for all times
#   specified, then repeat for the next item in the PROCESS_LIST until all
#   wrappers have been run
LOOP_ORDER = processes

# location of configuration files used by MET applications
CONFIG_DIR={PARM_BASE}/use_cases/model_applications/s2s

OBS_WR_INPUT_DIR = {INPUT_BASE}/model_applications/s2s/UserScript_obsERA_obsOnly_WeatherRegime/ERA/Daily
OBS_WR_INPUT_TEMPLATE = Z500_daily_{valid?fmt=%Y%m%d}_NH.nc
OBS_WR_OUTPUT_DIR = {OBS_WR_INPUT_DIR}
OBS_WR_OUTPUT_TEMPLATE = ERA_daily_files_lead{lead?fmt=%HHH}.txt


# Regridding Pre-Processing Step
[regrid_obs]
# Start time for METplus run - must match VALID_TIME_FMT
VALID_BEG = 1979120100

# End time for METplus run - must match VALID_TIME_FMT
VALID_END = 2017022818

# Increment between METplus runs in seconds. Must be >= 60
VALID_INCREMENT = 21600

# REGRID_DATA_PLANE (Pre Processing Step 1), currently turned off
# Run regrid_data_plane on forecast data
OBS_REGRID_DATA_PLANE_RUN = True

# If true, process each field individually and write a file for each
# If false, run once per run time passing in all fields specified
OBS_DATA_PLANE_ONCE_PER_FIELD = False

# Name of input field to process
OBS_REGRID_DATA_PLANE_VAR1_INPUT_FIELD_NAME = Z

# Level of input field to process
OBS_REGRID_DATA_PLANE_VAR1_INPUT_LEVEL = P500

# Name of output field to create
OBS_REGRID_DATA_PLANE_VAR1_OUTPUT_FIELD_NAME = Z500

# Mask to use for regridding
# A 1 degree latitude/longitude grid running 24 to 54 degrees latitude
# and 230 to 300 degrees longitude
REGRID_DATA_PLANE_VERIF_GRID = latlon 71 31 54 230 -1.0 1.0

# Method to run regrid_data_plane, not setting this will default to NEAREST
REGRID_DATA_PLANE_METHOD = BILIN

# Regridding width used in regrid_data_plane, not setting this will default to 1
REGRID_DATA_PLANE_WIDTH = 2

# input and output data directories for each application in PROCESS_LIST
OBS_REGRID_DATA_PLANE_INPUT_DIR = {INPUT_BASE}/model_applications/s2s/UserScript_obsERA_obsOnly_WeatherRegime/ERA/OrigData
OBS_REGRID_DATA_PLANE_OUTPUT_DIR = {OUTPUT_BASE}/s2s/UserScript_obsERA_obsOnly_WeatherRegime/ERA/Regrid

# format of filenames
# Input and output ERA Interim
OBS_REGRID_DATA_PLANE_INPUT_TEMPLATE = {valid?fmt=%Y%m}/ei.oper.an.pl.regn128sc.{valid?fmt=%Y%m%d%H}
OBS_REGRID_DATA_PLANE_OUTPUT_TEMPLATE = {valid?fmt=%Y%m%d}/Z500_6hourly_{init?fmt=%Y%m%d%H}_NH.nc


# Daily Mean Pre-Processing Step
[daily_mean_obs]
# Start time for METplus run
VALID_BEG = 1979120118

# End time for METplus run
VALID_END = 2017022818

# run pcp_combine on obs data
OBS_PCP_COMBINE_RUN = True

# method to run pcp_combine on forecast data
# Options are ADD, SUM, SUBTRACT, DERIVE, and USER_DEFINED
OBS_PCP_COMBINE_METHOD = DERIVE
OBS_PCP_COMBINE_STAT_LIST = MEAN

# field name and level of 1 hr accumulation in forecast files
OBS_PCP_COMBINE_INPUT_ACCUMS = 6
OBS_PCP_COMBINE_INPUT_NAMES = Z500
OBS_PCP_COMBINE_INPUT_LEVELS = "(*,*)"
OBS_PCP_COMBINE_INPUT_OPTIONS = convert(x) = x / 9.81; set_attr_valid = "{valid?fmt=%Y%m%d_%H%M%S?shift=-64800}";

# Convert height and derive mean over 24 hours
OBS_PCP_COMBINE_OUTPUT_ACCUM = 24
OBS_PCP_COMBINE_DERIVE_LOOKBACK = 24

# Name output variable Z500
OBS_PCP_COMBINE_OUTPUT_NAME = Z500

# input and output data directories for each application in PROCESS_LIST
OBS_PCP_COMBINE_INPUT_DIR = {OUTPUT_BASE}/s2s/UserScript_obsERA_obsOnly_WeatherRegime/ERA/Regrid
OBS_PCP_COMBINE_OUTPUT_DIR = {OUTPUT_BASE}/s2s/UserScript_obsERA_obsOnly_WeatherRegime/ERA/Daily

# Input ERA Interim
OBS_PCP_COMBINE_INPUT_TEMPLATE = {valid?fmt=%Y%m%d}/Z500_6hourly_{valid?fmt=%Y%m%d%H}_NH.nc
OBS_PCP_COMBINE_OUTPUT_TEMPLATE = Z500_daily_{valid?fmt=%Y%m%d?shift=-64800}_NH.nc


# Get a File list for the OBS IBL data (daily mean files)
[obs_wr_filelist]
# Find the files for each time
USER_SCRIPT_RUNTIME_FREQ = RUN_ONCE_FOR_EACH

USER_SCRIPT_COMMAND = {METPLUS_BASE}/parm/use_cases/model_applications/s2s/UserScript_fcstGFS_obsERA_Blocking/save_input_files_txt_missing.py {OBS_WR_INPUT_DIR}/{OBS_WR_INPUT_TEMPLATE} {OBS_WR_OUTPUT_DIR}/{OBS_WR_OUTPUT_TEMPLATE}


# Variables for the Weather Regime code
[user_env_vars]
# Steps to Run
OBS_STEPS = ELBOW+PLOTELBOW+EOF+PLOTEOF+KMEANS+PLOTKMEANS+TIMEFREQ+PLOTFREQ

# Make OUTPUT_BASE Available to the script
SCRIPT_OUTPUT_BASE = {OUTPUT_BASE}

# Number of Seasons and Days per season that should be available
# The code will fill missing data, but requires the same number of days per
# season for each year.  You may need to omit leap days if February is part of
# the processing
NUM_SEASONS = 38
DAYS_PER_SEASON = 90

# Text files containing a list of input files for the IBL code
OBS_WR_INPUT_TEXTFILE = {OBS_WR_OUTPUT_DIR}/{OBS_WR_OUTPUT_TEMPLATE}

# Boolean indicating whether to keep the above text file or delete it at the end of the run
KEEP_WR_FILE_LISTING = True

# Variable for the Z500 data
OBS_WR_VAR = Z500

# Weather Regime Number
OBS_WR_NUMBER = 6

# Number of clusters
OBS_NUM_CLUSTERS = 20

# Number of principal components
OBS_NUM_PCS = 10

# Time (in timesteps) over which to compute weather regime frequencies
# i.e. if your data time step is days and you want to average over 7
# days, input 7
# Optional, only needed if you want to compute frequencies
OBS_WR_FREQ = 7

# Type, name and directory of Output File for weather regime classification
# Type options are text or netcdf
OBS_WR_OUTPUT_FILE_TYPE = text
OBS_WR_OUTPUT_FILE = obs_weather_regime_class
WR_OUTPUT_FILE_DIR = {OUTPUT_BASE}/s2s/UserScript_obsERA_obsOnly_WeatherRegime

# Directory to send output plots
WR_PLOT_OUTPUT_DIR = {OUTPUT_BASE}/s2s/UserScript_obsERA_obsOnly_WeatherRegime/plots/

# Elbow Plot Title and output file name
OBS_ELBOW_PLOT_TITLE = Elbow Method For Optimal k
OBS_ELBOW_PLOT_OUTPUT_NAME = obs_elbow

# EOF plot output name and contour levels
OBS_EOF_PLOT_OUTPUT_NAME = obs_eof
EOF_PLOT_LEVELS = -50, -45, -40, -35, -30, -25, -20, -15, -10, -5,  0,  5, 10, 15, 20, 25, 30, 35, 40, 45, 50

# K means Plot Output Name and contour levels
OBS_KMEANS_PLOT_OUTPUT_NAME = obs_kmeans
KMEANS_PLOT_LEVELS = -80, -70, -60, -50, -40, -30, -20, -10, 0, 10, 20, 30, 40, 50, 60, 70, 80

# Frequency Plot title and output file name
OBS_FREQ_PLOT_TITLE = Seasonal Cycle of WR Days/Week (1979-2017)
OBS_FREQ_PLOT_OUTPUT_NAME = obs_freq

# MPR file information
MASK_NAME = FULL
WR_MPR_OUTPUT_DIR = {OUTPUT_BASE}/s2s/UserScript_obsERA_obsOnly_WeatherRegime/mpr


# Run the Weather Regime Script
[script_wr]
# User Script Commands
USER_SCRIPT_CUSTOM_LOOP_LIST = nc

# Run the user script once
USER_SCRIPT_RUNTIME_FREQ = RUN_ONCE_PER_LEAD

# Command to run the user script with input configuration file
USER_SCRIPT_COMMAND = {METPLUS_BASE}/parm/use_cases/model_applications/s2s/UserScript_obsERA_obsOnly_WeatherRegime/WeatherRegime_driver.py
