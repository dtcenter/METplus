# After changing this file, check it on:
#   http://lint.travis-ci.org/

# Help: https://config.travis-ci.com/

# ASSUMPTIONS USED IN THIS TRAVIS CONFIGURATION
# Literal assumptions: 
# If these assumptions are not true, than build will break.
#  Docker Hub organization repository: dtcenter/metplus:develop
#  Docker Hub user repository: user_name is the same as 
#  the Travis Ci account owner_name 
#  and uses a tag named test.
#     <user_name>/metplus:test
#
# Configuration assumptions
# These are configurable
#  DOCKERHUB_USE_DEFAULT
#  branches to build: develop
#
 
language: python
dist: xenial #Ubuntu Xenial 16.04
os: linux

# Travis docs indicate, need define the docker service, was able 
# to run docker without this ... basically it runs this command
# to start the service: sudo systemctl start docker
# But note, the docker service is started and running anyway.
# How do you know, If you comment out and run this command to show
# the state of all services, is shows that docker is running.
# systemctl list-units --type=service
services:
  - docker

# Note: even though defining python versions with the 
# python key which expands jobs...
# We are not running METplus in these versions since
# METplus is running in the docker container space
# NOT on the travis vm space.
python:
  - 3.6

git:
  depth: 25

# This defines what is allowed to build.
# Build only the safelist
branches:
  only:
  - develop
  - /^feature_.*/
  - /^main_.*/
  - /^bugfix_.*/  

cache:
  - pip

# HOME=/home/travis
# TRAVIS_BUILD_DIR=/home/travis/build/owner_name/repo_name
# TRAVIS_REPO_SLUG=owner_name/repo_name
# OWNER_BUILD_DIR=/home/travis/build/owner_name
env:
  global:
    - DO_GIT_CLONE=false
    - REPO_NAME=METplus
    - REPO_NAME_lc=metplus
    - CURRENT_BRANCH=${TRAVIS_PULL_REQUEST_BRANCH:-$TRAVIS_BRANCH}
    - GH_PAGES_DIR=${HOME}/gh-pages
    - PYTHON_PACKAGES="requests"
    - OWNER_BUILD_DIR=`dirname ${TRAVIS_BUILD_DIR}`
    - DOCKER_WORK_DIR=/metplus
    - GITHUB_REPO_ORG=DTCenter
    - DOCKERHUB_DEFAULT_REPO=dtcenter/metplus
    - DOCKERHUB_DEFAULT_TAGNAME=develop
    - DOCKERHUB_MET_TAGNAME=develop
    - DOCKER_DATA_DIR=/data
    # The DOCKERHUB_USER_REPO setting ASSUMES your owner_name 
    # in travis ci IS THE SAME as your docker hub user_name,
    # since it is setting it  based on the travis repo slug.
    - DOCKERHUB_USER_REPO="`dirname ${TRAVIS_REPO_SLUG}| awk '{print tolower($0)}'`/metplus"
    - DOCKERHUB_USER_TAGNAME=develop
    # set to true to use default settings
    # if set to false, to use DOCKER_USER_* settings, your dockerhub container.
    - DOCKERHUB_USE_DEFAULT=true

script:
  - pwd

# install all of the dependencies you need here
install:

  - if [ ! -z "$PYTHON_PACKAGES" ]; then
      pip install --upgrade pip;
      pip install $PYTHON_PACKAGES;
    fi
  - pip list

# execute all of the commands which 
# should make the build pass or fail
before_script:

  # This block defines which docker image to pull and use in all
  # the jobs for the build.
  - if [[ ${DOCKERHUB_USE_DEFAULT} == true ]]; then
      export DOCKERHUB_TAG=${DOCKERHUB_DEFAULT_REPO}:${DOCKERHUB_DEFAULT_TAGNAME};
    else
      export DOCKERHUB_TAG=${DOCKERHUB_USER_REPO}:${DOCKERHUB_USER_TAGNAME};
    fi;
  - echo ${DOCKERHUB_TAG};
    echo ${GITHUB_REPO_ORG};
    echo ${TRAVIS_REPO_SLUG};
    echo ${TRAVIS_BUILD_DIR};
    echo ${OWNER_BUILD_DIR};

jobs:
  allow_failures:
    - stage: "Documentation"

  include:
    - stage: "Documentation"
      before_install: export PYTHON_PACKAGES="$PYTHON_PACKAGES sphinx_rtd_theme doc8"
      script:
        - doc8 docs/index.rst docs/Users_Guide/ docs/Contributors_Guide/
    - stage: "Docker Setup"
      name: "Update Data Volumes"
      before_install: export PYTHON_PACKAGES="$PYTHON_PACKAGES bs4 python-dateutil"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/docker_update_data_volumes.py
    - name: "Get METplus Image"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/docker_setup.sh
    - stage: "Tests"
      name: "Pytest Unit Tests"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/test_unit.sh
    - name: "Use Case Tests - met_tool_wrapper"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/test_use_cases_met_tool_wrapper.sh
    - name: "Use Case Tests - data_assimilation"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/test_use_cases_data_assimilation.sh
    - name: "Use Case Tests - cryosphere"
      script:
        # add travis_wait before command because a case takes longer than 10 minutes to return
       - travis_wait 30 ${TRAVIS_BUILD_DIR}/ci/travis_jobs/test_use_cases_model_applications.sh --cryosphere
    - name: "Use Case Tests - convection_allowing_models"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/test_use_cases_model_applications.sh --convection_allowing_models
    - name: "Use Case Tests - climate"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/test_use_cases_model_applications.sh --climate
    - name: "Use Case Tests - medium_range1"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/test_use_cases_model_applications.sh --medium_range1
    - name: "Use Case Tests - medium_range2"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/test_use_cases_model_applications.sh --medium_range2
    # medium_range3 is TCStat_SeriesAnalysis_fcstGFS_obsGFS_FeatureRelative_SeriesByLead_PyEmbed_IVT.conf
    - name: "Use Case Tests - medium_range3"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/test_use_cases_medium_range3.sh
    - name: "Use Case Tests - precipitation"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/test_use_cases_model_applications.sh --precipitation
    - name: "Use Case Tests - s2s, space_weather, tc_and_extra_tc"
      script:
        - ${TRAVIS_BUILD_DIR}/ci/travis_jobs/test_use_cases_model_applications.sh --s2s --space_weather --tc_and_extra_tc
