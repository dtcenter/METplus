name: METplus CI/CD Workflow
on:
  push:
    branches:
      - develop
      - 'feature_*'
      - 'main_*'
      - 'bugfix_*'
  pull_request:
    types: [opened, created, edited]

jobs:
  which_branch:
    name: Get Current Branch
    runs-on: ubuntu-latest
    steps:
      # extract branch name
      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
        id: extract_branch

      # extract branch name on pull request
      - name: Print branch name
        if: github.event_name == 'pull_request'
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF})" >> $GITHUB_ENV

      # save branch name as artifact
      - name: Get branch name
        run: |
          mkdir artifacts
          echo 'The branch name is' $BRANCH_NAME
          echo $BRANCH_NAME > artifacts/branch_name.txt
      - uses: actions/upload-artifact@v2
        with:
          path: artifacts/branch_name.txt
          name: branch_name_artifact
  documentation:
    name: Check Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Install dependencies
        run: python -m pip install --upgrade pip python-dateutil requests sphinx_rtd_theme doc8
      - name: Run doc8
        continue-on-error: true
        run: doc8 --ignore D001 docs/index.rst docs/Users_Guide/ docs/Contributors_Guide/
  get_image:
    name: Docker Setup - Get METplus Image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - uses: actions/download-artifact@v2
      - run: echo "BRANCH_NAME=$(cat branch_name_artifact)" >> $GITHUB_ENV
      - run: echo BRANCH_NAME is $BRANCH_NAME
      - name: Install dependencies
        run: python -m pip install --upgrade pip python-dateutil requests bs4
      - name: Get METplus Image
        run: ${GITHUB_WORKSPACE}/ci/jobs/docker_setup.sh
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
